version: '3'


services:

  app:

    build: 
      # context: donde esta el dockerfile
      # dockerfile: especificar el nombre del dockerfile porque podemos tener varios dockerfile con diferentes nombres
      #             si el nombre es dockerfile no hace falta especificarlo
      # target: es el stage (etapa) que vamos a ejecutar en este docker-compose 
      context: .
      target: dev
      dockerfile: Dockerfile
    # Esta (bind) copiando todo los archivos del directorio local a /app
    volumes:
      - .:/app/
      # image -> le ponemos nombre a la imagen
    image: danove/teslo-shop-backed:1.0.0
    container_name: nest-app
    ports:
      - ${PORT}:${PORT}
    # El necesita crear las variables de entorno aqui a pesar de tener el .env porque
    # en un determinado momento en el dockerfile este archivo no existe y para asegurarse las crea aqui
    environment:
      APP_VERSION: ${APP_VERSION} 
      STAGE: ${STAGE}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      PORT: ${PORT}
      HOST_API: ${HOST_API}
      JWT_SECRET: ${JWT_SECRET}
  
  db:
    image: postgres:14.3
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    container_name: ${DB_NAME}
    volumes:
      - postgres-db:/var/lib/postgresql/data


volumes:
  postgres-db:
    external: false